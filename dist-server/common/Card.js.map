{"version":3,"sources":["../../src/common/Card.js"],"names":["SIDE","FRONT","BACK","WIDTH","HEIGHT","Card","side","Object","assign","model","type","BaseTypes","TYPES","INT32","INT8","order","gameEngine","options","props","other","Renderer","getInstance","addCard","removeCard","DynamicObject"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,IAAI,GAAG;AAAEC,EAAAA,KAAK,EAAE,CAAT;AAAYC,EAAAA,IAAI,EAAE;AAAlB,CAAb;AACA,IAAMC,KAAK,GAAG,GAAd;AACA,IAAMC,MAAM,GAAG,GAAf;;IACqBC,I;;;;;;;2BAcZ;AACL,WAAKC,IAAL,GAAa,KAAKA,IAAL,KAAcN,IAAI,CAACC,KAAnB,GAA2BD,IAAI,CAACE,IAAhC,GAAuCF,IAAI,CAACC,KAAzD;AACD;;;wBAdsB;AACrB,aAAOM,MAAM,CAACC,MAAP,CAAc;AACnBC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEC,mBAAUC,KAAV,CAAgBC;AAAxB,SADY;AACqB;AACxCP,QAAAA,IAAI,EAAE;AAAEI,UAAAA,IAAI,EAAEC,mBAAUC,KAAV,CAAgBE;AAAxB,SAFa;AAEmB;AACtCC,QAAAA,KAAK,EAAE;AAAEL,UAAAA,IAAI,EAAEC,mBAAUC,KAAV,CAAgBC,KAAxB,CAAgC;;AAAhC;AAHY,OAAd,iDAAP;AAKD;;;wBAEkB;AAAE,aAAOV,KAAP;AAAe;;;wBAChB;AAAE,aAAOC,MAAP;AAAgB;;;wBACpB;AAAE,aAAOJ,IAAP;AAAc;;;AAMlC,gBAAYgB,UAAZ,EAAwBC,OAAxB,EAAiCC,KAAjC,EAAwC;AAAA;;AAAA;;AACtC,8EAAMF,UAAN,EAAkBC,OAAlB,EAA2BC,KAA3B;AACA,UAAKZ,IAAL,GAAYN,IAAI,CAACC,KAAjB;AAFsC;AAGvC;;;;2BAEMkB,K,EAAO;AACZ,uEAAaA,KAAb;;AACA,WAAKV,KAAL,GAAaU,KAAK,CAACV,KAAnB;AACA,WAAKH,IAAL,GAAYa,KAAK,CAACb,IAAlB;AACA,WAAKS,KAAL,GAAaI,KAAK,CAACJ,KAAnB;AACD,K,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;+BACW;AACT,6GAAoC,KAAKN,KAAzC,mBAAuD,KAAKH,IAA5D,oBAA0E,KAAKS,KAA/E;AACD;;;iCAEYC,U,EAAY;AACvB,UAAII,iBAAJ,EACEA,kBAASC,WAAT,GAAuBC,OAAvB,CAA+B,IAA/B;AACH;;;sCAEiBN,U,EAAY;AAC5B,UAAII,iBAAJ,EACEA,kBAASC,WAAT,GAAuBE,UAAvB,CAAkC,IAAlC;AACH;;;;EAnD+BC,sB","sourcesContent":["import { DynamicObject, BaseTypes, Renderer } from 'lance-gg';\n\nconst SIDE = { FRONT: 0, BACK: 1 }\nconst WIDTH = 120;\nconst HEIGHT = 180;\nexport default class Card extends DynamicObject {\n\n  static get netScheme() {\n    return Object.assign({\n      model: { type: BaseTypes.TYPES.INT32 }, // -1: unknown, 0+:card model\n      side: { type: BaseTypes.TYPES.INT8 }, // SIDE.FRONT, SIDE.BACK\n      order: { type: BaseTypes.TYPES.INT32 } // display ordering\n    }, super.netScheme);\n  }\n\n  static get WIDTH() { return WIDTH; }\n  static get HEIGHT() { return HEIGHT; }\n  static get SIDE() { return SIDE; }\n\n  flip() {\n    this.side = (this.side === SIDE.FRONT ? SIDE.BACK : SIDE.FRONT);\n  }\n\n  constructor(gameEngine, options, props) {\n    super(gameEngine, options, props);\n    this.side = SIDE.FRONT;\n  }\n\n  syncTo(other) {\n    super.syncTo(other);\n    this.model = other.model;\n    this.side = other.side;\n    this.order = other.order;\n  }\n\n  // avoid gradual synchronization of velocity\n  //get bending() {\n  //  return {\n  //    velocity: { percent: 0.0 },\n  //    position: { percent: 1.0, min : 5}\n  //  };\n  //}\n\n  // debug\n  toString() {\n    return `${super.toString()} model=${this.model} side=${this.side} order=${this.order}`;\n  }\n\n  onAddToWorld(gameEngine) {\n    if (Renderer)\n      Renderer.getInstance().addCard(this);\n  }\n\n  onRemoveFromWorld(gameEngine) {\n    if (Renderer)\n      Renderer.getInstance().removeCard(this);\n  }\n}\n\n"],"file":"Card.js"}